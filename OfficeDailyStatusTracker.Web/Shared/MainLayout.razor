@using OfficeDailyStatusTracker.Common.Models
@inherits LayoutComponentBase

@inject ProtectedSessionStorage SessionStorage;
@inject NavigationManager NavigationManager;

<PageTitle>OfficeDailyStatusTracker</PageTitle>

<div class="page">
    @if(UserAuthenticationModel != null)
    {
        <div class="sidebar">
            <NavMenu/>
        </div>
    }

    <main>
        @if(UserAuthenticationModel != null)
        {
            <div class="top-row px-4">
                <div class="dropdown">
                    <div class="btn dropdown-toggle" style="border: none" data-bs-toggle="dropdown" aria-expanded="false">
                        <img src="https://s3.eu-central-1.amazonaws.com/bootstrapbaymisc/blog/24_days_bootstrap/fox.jpg" width="40" height="40" class="rounded-circle" alt="logo" >
                        @UserAuthenticationModel.UserName
                    </div>
                    <ul class="dropdown-menu">
                        <li class="px-5" role="button" @onclick="Logout">Logout</li>
                    </ul>
                </div>
            </div>
        }

        <article class="content px-4">
            <CascadingValue Value="EventNotify">
                @Body
            </CascadingValue>
        </article>
    </main>
</div>

@code
{
    public AuthenticationModel? UserAuthenticationModel { get; set; }

    EventCallback EventNotify => EventCallback.Factory.Create(this, NotifyLayout);

    public async void Logout()
    {
        await SessionStorage.DeleteAsync("userAuthenticationModel");
        await NotifyLayout();

        NavigationManager.NavigateTo("/login");
    }

    private async Task NotifyLayout()
    {
        ProtectedBrowserStorageResult<AuthenticationModel> userAuthenticationModel = await SessionStorage.GetAsync<AuthenticationModel>("userAuthenticationModel");

        if(userAuthenticationModel.Success)
        {
            UserAuthenticationModel = userAuthenticationModel.Value!;
        }
        else
        {
            UserAuthenticationModel = null!;
            NavigationManager.NavigateTo("/login");
        }
    }
}